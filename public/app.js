"use strict";

const ListItem = props => /*#__PURE__*/React.createElement("li", null, props.item);

const List = props => /*#__PURE__*/React.createElement("ul", null, props.list.map((item, index) => {
  return /*#__PURE__*/React.createElement(ListItem, {
    key: index,
    item: item.item
  });
}));

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      list: [],
      itemToAdd: ""
    };
    this._handleChange = this._handleChange.bind(this);
    this._handleSubmit = this._handleSubmit.bind(this);
  }

  _handleChange(e) {
    this.setState({
      [e.target.name]: e.target.value
    });
  }

  _handleSubmit(e) {
    e.preventDefault();
    console.log("You submitted the form!");
    const updatedList = this.state.list.slice();
    updatedList.push(this.state.itemToAdd);
    $.ajax({
      url: "/list",
      method: "POST",
      data: {
        data: this.state.itemToAdd
      },
      success: () => {
        console.log("ajax success");
        this.setState({
          itemToAdd: ""
        });

        this._retrieve();
      },
      error: () => {
        console.error("AJAX POST error");
      }
    });
  }

  _retrieve() {
    $.ajax({
      url: "/list",
      method: "GET",
      success: data => {
        this.setState({
          list: data
        });
      },
      error: () => {
        console.error("AJAX GET error");
      }
    });
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Grocery List"), /*#__PURE__*/React.createElement(List, {
      list: this.state.list
    }), /*#__PURE__*/React.createElement("form", {
      onSubmit: this._handleSubmit
    }, /*#__PURE__*/React.createElement("label", null, "Cart:", " ", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "itemToAdd",
      value: this.state.itemToAdd,
      onChange: this._handleChange
    })), /*#__PURE__*/React.createElement("input", {
      type: "submit",
      value: "Submit"
    })));
  }

}

ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById("app")); // _handleChange(event) {
//   this.setState({
//     [event.target.name]: event.target.value
//   }, () => {
//     this._getTotal(this.state.unitPrice, this.state.quantity);
//   });
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9hcHAuanN4Il0sIm5hbWVzIjpbIkxpc3RJdGVtIiwicHJvcHMiLCJpdGVtIiwiTGlzdCIsImxpc3QiLCJtYXAiLCJpbmRleCIsIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJzdGF0ZSIsIml0ZW1Ub0FkZCIsIl9oYW5kbGVDaGFuZ2UiLCJiaW5kIiwiX2hhbmRsZVN1Ym1pdCIsImUiLCJzZXRTdGF0ZSIsInRhcmdldCIsIm5hbWUiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiY29uc29sZSIsImxvZyIsInVwZGF0ZWRMaXN0Iiwic2xpY2UiLCJwdXNoIiwiJCIsImFqYXgiLCJ1cmwiLCJtZXRob2QiLCJkYXRhIiwic3VjY2VzcyIsIl9yZXRyaWV2ZSIsImVycm9yIiwicmVuZGVyIiwiUmVhY3RET00iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxRQUFRLEdBQUlDLEtBQUQsaUJBQVcsZ0NBQUtBLEtBQUssQ0FBQ0MsSUFBWCxDQUE1Qjs7QUFFQSxNQUFNQyxJQUFJLEdBQUlGLEtBQUQsaUJBQ1gsZ0NBQ0dBLEtBQUssQ0FBQ0csSUFBTixDQUFXQyxHQUFYLENBQWUsQ0FBQ0gsSUFBRCxFQUFPSSxLQUFQLEtBQWlCO0FBQy9CLHNCQUFPLG9CQUFDLFFBQUQ7QUFBVSxJQUFBLEdBQUcsRUFBRUEsS0FBZjtBQUFzQixJQUFBLElBQUksRUFBRUosSUFBSSxDQUFDQTtBQUFqQyxJQUFQO0FBQ0QsQ0FGQSxDQURILENBREY7O0FBUUEsTUFBTUssR0FBTixTQUFrQkMsS0FBSyxDQUFDQyxTQUF4QixDQUFrQztBQUNoQ0MsRUFBQUEsV0FBVyxDQUFDVCxLQUFELEVBQVE7QUFDakIsVUFBTUEsS0FBTjtBQUNBLFNBQUtVLEtBQUwsR0FBYTtBQUNYUCxNQUFBQSxJQUFJLEVBQUUsRUFESztBQUVYUSxNQUFBQSxTQUFTLEVBQUU7QUFGQSxLQUFiO0FBSUEsU0FBS0MsYUFBTCxHQUFxQixLQUFLQSxhQUFMLENBQW1CQyxJQUFuQixDQUF3QixJQUF4QixDQUFyQjtBQUNBLFNBQUtDLGFBQUwsR0FBcUIsS0FBS0EsYUFBTCxDQUFtQkQsSUFBbkIsQ0FBd0IsSUFBeEIsQ0FBckI7QUFDRDs7QUFFREQsRUFBQUEsYUFBYSxDQUFDRyxDQUFELEVBQUk7QUFDZixTQUFLQyxRQUFMLENBQWM7QUFDWixPQUFDRCxDQUFDLENBQUNFLE1BQUYsQ0FBU0MsSUFBVixHQUFpQkgsQ0FBQyxDQUFDRSxNQUFGLENBQVNFO0FBRGQsS0FBZDtBQUdEOztBQUVETCxFQUFBQSxhQUFhLENBQUNDLENBQUQsRUFBSTtBQUNmQSxJQUFBQSxDQUFDLENBQUNLLGNBQUY7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkseUJBQVo7QUFFQSxVQUFNQyxXQUFXLEdBQUcsS0FBS2IsS0FBTCxDQUFXUCxJQUFYLENBQWdCcUIsS0FBaEIsRUFBcEI7QUFDQUQsSUFBQUEsV0FBVyxDQUFDRSxJQUFaLENBQWlCLEtBQUtmLEtBQUwsQ0FBV0MsU0FBNUI7QUFFQWUsSUFBQUEsQ0FBQyxDQUFDQyxJQUFGLENBQU87QUFDTEMsTUFBQUEsR0FBRyxFQUFFLE9BREE7QUFFTEMsTUFBQUEsTUFBTSxFQUFFLE1BRkg7QUFHTEMsTUFBQUEsSUFBSSxFQUFFO0FBQUVBLFFBQUFBLElBQUksRUFBRSxLQUFLcEIsS0FBTCxDQUFXQztBQUFuQixPQUhEO0FBSUxvQixNQUFBQSxPQUFPLEVBQUUsTUFBTTtBQUNiVixRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxjQUFaO0FBQ0EsYUFBS04sUUFBTCxDQUFjO0FBQ1pMLFVBQUFBLFNBQVMsRUFBRTtBQURDLFNBQWQ7O0FBR0EsYUFBS3FCLFNBQUw7QUFDRCxPQVZJO0FBV0xDLE1BQUFBLEtBQUssRUFBRSxNQUFNO0FBQ1haLFFBQUFBLE9BQU8sQ0FBQ1ksS0FBUixDQUFjLGlCQUFkO0FBQ0Q7QUFiSSxLQUFQO0FBZUQ7O0FBRURELEVBQUFBLFNBQVMsR0FBRztBQUNWTixJQUFBQSxDQUFDLENBQUNDLElBQUYsQ0FBTztBQUNMQyxNQUFBQSxHQUFHLEVBQUUsT0FEQTtBQUVMQyxNQUFBQSxNQUFNLEVBQUUsS0FGSDtBQUdMRSxNQUFBQSxPQUFPLEVBQUdELElBQUQsSUFBVTtBQUNqQixhQUFLZCxRQUFMLENBQWM7QUFDWmIsVUFBQUEsSUFBSSxFQUFFMkI7QUFETSxTQUFkO0FBR0QsT0FQSTtBQVFMRyxNQUFBQSxLQUFLLEVBQUUsTUFBTTtBQUNYWixRQUFBQSxPQUFPLENBQUNZLEtBQVIsQ0FBYyxnQkFBZDtBQUNEO0FBVkksS0FBUDtBQVlEOztBQUVEQyxFQUFBQSxNQUFNLEdBQUc7QUFDUCx3QkFDRSw4Q0FDRSwrQ0FERixlQUVFLG9CQUFDLElBQUQ7QUFBTSxNQUFBLElBQUksRUFBRSxLQUFLeEIsS0FBTCxDQUFXUDtBQUF2QixNQUZGLGVBR0U7QUFBTSxNQUFBLFFBQVEsRUFBRSxLQUFLVztBQUFyQixvQkFDRSw0Q0FDUSxHQURSLGVBRUU7QUFDRSxNQUFBLElBQUksRUFBQyxNQURQO0FBRUUsTUFBQSxJQUFJLEVBQUMsV0FGUDtBQUdFLE1BQUEsS0FBSyxFQUFFLEtBQUtKLEtBQUwsQ0FBV0MsU0FIcEI7QUFJRSxNQUFBLFFBQVEsRUFBRSxLQUFLQztBQUpqQixNQUZGLENBREYsZUFVRTtBQUFPLE1BQUEsSUFBSSxFQUFDLFFBQVo7QUFBcUIsTUFBQSxLQUFLLEVBQUM7QUFBM0IsTUFWRixDQUhGLENBREY7QUFrQkQ7O0FBM0UrQjs7QUE4RWxDdUIsUUFBUSxDQUFDRCxNQUFULGVBQWdCLG9CQUFDLEdBQUQsT0FBaEIsRUFBeUJFLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixLQUF4QixDQUF6QixFLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgTGlzdEl0ZW0gPSAocHJvcHMpID0+IDxsaT57cHJvcHMuaXRlbX08L2xpPjtcblxuY29uc3QgTGlzdCA9IChwcm9wcykgPT4gKFxuICA8dWw+XG4gICAge3Byb3BzLmxpc3QubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgcmV0dXJuIDxMaXN0SXRlbSBrZXk9e2luZGV4fSBpdGVtPXtpdGVtLml0ZW19IC8+O1xuICAgIH0pfVxuICA8L3VsPlxuKTtcblxuY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxpc3Q6IFtdLFxuICAgICAgaXRlbVRvQWRkOiBcIlwiLFxuICAgIH07XG4gICAgdGhpcy5faGFuZGxlQ2hhbmdlID0gdGhpcy5faGFuZGxlQ2hhbmdlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0ID0gdGhpcy5faGFuZGxlU3VibWl0LmJpbmQodGhpcyk7XG4gIH1cblxuICBfaGFuZGxlQ2hhbmdlKGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIFtlLnRhcmdldC5uYW1lXTogZS50YXJnZXQudmFsdWUsXG4gICAgfSk7XG4gIH1cblxuICBfaGFuZGxlU3VibWl0KGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc29sZS5sb2coXCJZb3Ugc3VibWl0dGVkIHRoZSBmb3JtIVwiKTtcblxuICAgIGNvbnN0IHVwZGF0ZWRMaXN0ID0gdGhpcy5zdGF0ZS5saXN0LnNsaWNlKCk7XG4gICAgdXBkYXRlZExpc3QucHVzaCh0aGlzLnN0YXRlLml0ZW1Ub0FkZCk7XG5cbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBcIi9saXN0XCIsXG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgZGF0YTogeyBkYXRhOiB0aGlzLnN0YXRlLml0ZW1Ub0FkZCB9LFxuICAgICAgc3VjY2VzczogKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcImFqYXggc3VjY2Vzc1wiKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgaXRlbVRvQWRkOiBcIlwiLFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fcmV0cmlldmUoKTtcbiAgICAgIH0sXG4gICAgICBlcnJvcjogKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiQUpBWCBQT1NUIGVycm9yXCIpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuXG4gIF9yZXRyaWV2ZSgpIHtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBcIi9saXN0XCIsXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBzdWNjZXNzOiAoZGF0YSkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBsaXN0OiBkYXRhLFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBlcnJvcjogKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiQUpBWCBHRVQgZXJyb3JcIik7XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDE+R3JvY2VyeSBMaXN0PC9oMT5cbiAgICAgICAgPExpc3QgbGlzdD17dGhpcy5zdGF0ZS5saXN0fSAvPlxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17dGhpcy5faGFuZGxlU3VibWl0fT5cbiAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICBDYXJ0OntcIiBcIn1cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgIG5hbWU9XCJpdGVtVG9BZGRcIlxuICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS5pdGVtVG9BZGR9XG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLl9oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPGlucHV0IHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIlN1Ym1pdFwiIC8+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuUmVhY3RET00ucmVuZGVyKDxBcHAgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXBwXCIpKTtcblxuLy8gX2hhbmRsZUNoYW5nZShldmVudCkge1xuLy8gICB0aGlzLnNldFN0YXRlKHtcbi8vICAgICBbZXZlbnQudGFyZ2V0Lm5hbWVdOiBldmVudC50YXJnZXQudmFsdWVcbi8vICAgfSwgKCkgPT4ge1xuLy8gICAgIHRoaXMuX2dldFRvdGFsKHRoaXMuc3RhdGUudW5pdFByaWNlLCB0aGlzLnN0YXRlLnF1YW50aXR5KTtcbi8vICAgfSk7XG4vLyB9XG4iXX0=